from flask import Flask, request, jsonify
import os
import json
import time
from datetime import datetime

app = Flask(__name__)

# Data directory for api's internal persistence
DATA_DIR = '/app/data'
if not os.path.exists(DATA_DIR):
    os.makedirs(DATA_DIR)

# Directory for sharing HTML content with the web container
OUTPUT_DIR = os.environ.get('OUTPUT_DIR', '/app/web-output')
if not os.path.exists(OUTPUT_DIR):
    os.makedirs(OUTPUT_DIR)


@app.route('/api/message', methods=['POST'])
def create_message():
    content = request.json.get('content', '')
    timestamp = datetime.now().isoformat()
    
    message = {
        'id': int(time.time()),
        'content': content,
        'timestamp': timestamp
    }
    
    # Save to API's internal data volume
    messages = []
    try:
        with open(os.path.join(DATA_DIR, 'messages.json'), 'r') as f:
            messages = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        messages = []
    
    messages.append(message)
    
    with open(os.path.join(DATA_DIR, 'messages.json'), 'w') as f:
        json.dump(messages, f)
    
    # Update the web content in the shared volume
    generate_html(messages)
    
    return jsonify(message)


@app.route('/api/messages', methods=['GET'])
def get_messages():
    try:
        with open(os.path.join(DATA_DIR, 'messages.json'), 'r') as f:
            messages = json.load(f)
        return jsonify(messages)
    except (FileNotFoundError, json.JSONDecodeError):
        return jsonify([])


def generate_html(messages):
    """Generate HTML content and save it to the shared volume for the web container"""
    html_content = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Docker Volumes Demo</title>
        <style>
            body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
            .message { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; border-radius: 5px; }
            .timestamp { color: #888; font-size: 0.8em; }
            h1 { color: #0066cc; }
        </style>
    </head>
    <body>
        <h1>Docker Volumes Multi-Container Demo</h1>
        <p>This page is served by Nginx but generated by a Python API using a shared volume.</p>
        <h2>Messages:</h2>
        <div id="messages">
    """
    
    for message in messages:
        html_content += f"""
        <div class="message">
            <p>{message['content']}</p>
            <p class="timestamp">Posted at: {message['timestamp']}</p>
        </div>
        """
    
    html_content += """
        </div>
        <p>Content automatically updates when new messages are added via the API.</p>
        <p><em>Last generated: {}</em></p>
    </body>
    </html>
    """.format(datetime.now().isoformat())
    
    with open(os.path.join(OUTPUT_DIR, 'index.html'), 'w') as f:
        f.write(html_content)


# Generate an initial HTML file
generate_html([])


if __name__ == '__main__':
    print("Starting API service...")
    print(f"Data directory: {DATA_DIR}")
    print(f"Web output directory: {OUTPUT_DIR}")
    app.run(host='0.0.0.0', port=5000) 