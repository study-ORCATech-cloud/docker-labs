version: '3.8'

services:
  # Redis as a secrets store
  secrets-store:
    image: redis:alpine
    container_name: secrets-store
    command: redis-server --requirepass "${REDIS_PASSWORD:-secretstorepwd}"
    volumes:
      - secrets-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secretstorepwd}
    networks:
      - secrets-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # API to manage secrets
  secrets-api:
    build: ./secrets-api
    container_name: secrets-api
    ports:
      - "8088:8000" # API port for managing secrets
    depends_on:
      - secrets-store
    environment:
      - REDIS_HOST=secrets-store
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secretstorepwd}
      - API_KEY=${API_KEY:-api_key_for_secrets_manager}
    networks:
      - secrets-net

  # Main application that uses secrets
  app:
    build: .
    container_name: secrets-redis-app
    ports:
      - "8003:8000"
    depends_on:
      - secrets-api
    environment:
      - APP_NAME=Redis Secrets Demo
      - APP_ENV=production
      - SECRETS_API_URL=http://secrets-api:8000
      - SECRETS_API_KEY=${API_KEY:-api_key_for_secrets_manager}
    networks:
      - secrets-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  secrets-net:
    driver: bridge

volumes:
  secrets-data:
